<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="./liveDashboard.css" />
    <link
      href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Live Dashboard</title>
  </head>
  <body>
    <div class="main">
      <div class="header">
        <div style="display: flex">
          <img
            src="./navBarIcon.png"
            title="Switch Mode"
            id="navBarIcon"
            alt="Switch Mode"
            style="cursor: pointer; width: 8%; margin: 0.5% 3%"
          />
          <div class="heading">Data Entry System</div>
        </div>
        <form id="btn" action="/logout" method="get">
          <div class="admin" id="user-mode-name"><%= currentUser %></div>
          <button
            type="submit"
            style="
              background: linear-gradient(to right, #0f0c29, #302b63, #24243e);
            "
            class="button-logout bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded"
          >
            LOGOUT
          </button>
        </form>
      </div>
      <!-- ! ........SIde Nav Bar Menu......... -->
      <div id="navBarDivision">
        <div
          id="DataEntryDiv"
          onmouseover="onmouseoverBGColor(event)"
          onmouseout="onmouseoutBGColor(event)"
          onclick="handleFormSubmit(event)"
        >
          <div id="dataEntry" class="category">Data Entry</div>
        </div>
        <div
          id="ReportGenerationDiv"
          onmouseover="onmouseoverBGColor(event)"
          onmouseout="onmouseoutBGColor(event)"
          onclick="handleFormSubmit(event)"
        >
          <div id="reportGeneration" class="category">Report Generation</div>
        </div>
        <div
          id="AdministrationDiv"
          onmouseover="onmouseoverBGColor(event)"
          onmouseout="onmouseoutBGColor(event)"
          onclick="handleFormSubmit(event)"
        >
          <div id="administration" class="category">Administration</div>
        </div>
        <div
          id="AdminLogDiv"
          onmouseover="onmouseoverBGColor(event)"
          onmouseout="onmouseoutBGColor(event)"
          onclick="handleFormSubmit(event)"
        >
          <div id="adminLog" class="category">Admin Logs</div>
        </div>
        <div
          id="DashboardDiv"
          onmouseover="onmouseoverBGColor(event)"
          onmouseout="onmouseoutBGColor(event)"
        >
          <div id="activityLog" class="category">Dashboard</div>
        </div>
      </div>
      <form action="/follower" id="followerForm" method="post">
        <input
          type="hidden"
          id="currentUser"
          name="currentUser"
          value="<%= currentUser %>"
        />
        <input
          type="hidden"
          id="currentEmpID"
          name="currentEmpID"
          value="<%= currentEmpID %>"
        />
      </form>
      <form action="/filter" method="post" id="filterFrom">
        <input
          type="hidden"
          id="currentUser"
          name="currentUser"
          value="<%= currentUser %>"
        />
        <input
          type="hidden"
          id="currentEmpID"
          name="currentEmpID"
          value="<%= currentEmpID %>"
        />
      </form>
      <form action="/admin" method="post" id="adminForm">
        <input
          type="hidden"
          id="currentUser"
          name="currentUser"
          value="<%= currentUser %>"
        />
        <input
          type="hidden"
          id="currentEmpID"
          name="currentEmpID"
          value="<%= currentEmpID %>"
        />
      </form>
      <form action="/adminLog" method="post" id="adminLogForm">
        <input
          type="hidden"
          id="currentUser"
          name="currentUser"
          value="<%= currentUser %>"
        />
        <input
          type="hidden"
          id="currentEmpID"
          name="currentEmpID"
          value="<%= currentEmpID %>"
        />
      </form>
    </div>
    <div class="mainBody">

      <div
        id="fullWidthTabContent"
        class="border-t border-gray-200 dark:border-gray-600"
      >
        <div
          class="p-4 rounded-lg md:p-8 dark:bg-gray-800"
          id="stats"
          role="tabpanel"
          aria-labelledby="stats-tab"
          style="background-color: #1f2937"
        >
          <dl
            class="grid w-100 grid-cols-2 gap-8 p-4 sm:grid-cols-3 xl:grid-cols-7 dark:text-white sm:p-8"
            style="color: white"
          >
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold vehicleCount">0</dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Total No. of Vehicals
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold defectCount">0</dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Total No. of Defects
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold individualDefectCount">
                0
              </dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Surface
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold individualDefectCount">
                0
              </dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Body Fitting
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold individualDefectCount">
                0
              </dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Missing & Wrong Part
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold individualDefectCount">
                0
              </dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Welding
              </dd>
            </div>
            <div
              class="dataCard flex flex-col items-center justify-center lg\:w-40"
            >
              <dt class="mb-2 text-3xl font-extrabold individualDefectCount">
                0
              </dt>
              <dd class="font-light text-lg text-center dark:text-gray-400">
                Water Leak
              </dd>
            </div>
          </dl>
        </div>
      </div>

      <div class="mainTable flex flex-col justify-start content-center">
        <div class="tableContainer flex flex-col align-center overflow-y-scroll">
          <div class="relative m-4">
            <table
              class="w-full text-sm text-left text-gray-500 dark:text-gray-400"
            >
              <thead
                class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400 sticky top-0"
                style="background-color: #374151; color: gray"
              >
                <tr>
                  <th scope="col" class="py-3 px-6">User ID</th>
                  <th scope="col" class="py-3 px-6">User Name</th>
                  <th scope="col" class="py-3 px-6">Body number</th>
                  <th scope="col" class="py-3 px-6">Defect count</th>
                  <th scope="col" class="py-3 px-6">Time</th>
                </tr>
              </thead>
              <tbody
                class="overflow-y-auto defectLogTableBody"
                style="background-color: #1f2937"
              >
                <!-- <tr class="border-b dark:bg-gray-800 dark:border-gray-700">
                  <th
                    scope="row"
                    class="py-4 text-white px-6 font-medium whitespace-nowrap dark:text-white"
                  >
                    Microsoft Surface Pro
                  </th>
                  <td class="py-4 px-6">White</td>
                  <td class="py-4 px-6">Laptop PC</td>
                  <td class="py-4 px-6">$1999</td>
                  <td class="py-4 px-6">06/12/22</td>
                  <td class="py-4 px-6">11:03</td>
                </tr> -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </body>
  <script>
    document.addEventListener('click', hideAndSeek);

    function hideAndSeek(event) {
      const navBarDivision = document.getElementById('navBarDivision');
      if (event.target.id != 'navBarIcon') {
        navBarDivision.style.display = 'none';
      } else {
        if (
          navBarDivision.style.display == 'none' ||
          navBarDivision.style.display == ''
        ) {
          navBarDivision.style.display = 'inline-block';
        } else if (navBarDivision.style.display == 'inline-block') {
          navBarDivision.style.display = 'none';
        }
      }
    }

    function onmouseoverBGColor(event) {
      event.target.style.backgroundColor = '#075154';
    }

    function onmouseoutBGColor(event) {
      if (event.target.id != 'activityLog') {
        event.target.style.backgroundColor = '#00adb5';
      }
    }

    function handleFormSubmit(event) {
      var empStatus = '<%= emp_Status %>';
      var empChartAccess = '<%= emp_ChartAccess %>';

      if (event.target.id == 'dataEntry') {
        document.getElementById('followerForm').submit();
      } else if (event.target.id == 'administration') {
        if (empStatus == 'admin') {
          document.getElementById('adminForm').submit();
        } else {
          document.getElementById(
            'adminAccessDeniedDivision'
          ).style.visibility = 'visible';
        }
      } else if (event.target.id == 'reportGeneration') {
        if (empChartAccess.length > 0) {
          document.getElementById('filterFrom').submit();
        } else {
          document.getElementById(
            'reportGenerationDeniedDivision'
          ).style.visibility = 'visible';
        }
      } else if (event.target.id == 'adminLog') {
        if (empStatus == 'admin') {
          document.getElementById('adminLogForm').submit();
        } else {
          document.getElementById(
            'adminAccessDeniedDivision'
          ).style.visibility = 'visible';
        }
      }
    }

    // live
    setInterval(liveData, 500);

    async function liveData() {
      const response = await fetch('/liveData', {
        method: 'POST',
        headers: {
          'Content-type': 'application/json',
        },
        body: JSON.stringify({}),
      });

      const liveDataResponse = await response.json();

      const individualDefectCount = document.getElementsByClassName(
        'individualDefectCount'
      );

      document.getElementsByClassName('vehicleCount')[0].innerHTML =
        liveDataResponse.uniqueBodyNumber.length;
      document.getElementsByClassName('defectCount')[0].innerHTML =
        liveDataResponse.defectCount;

      Object.values(individualDefectCount).map((singleDefect, index) => {
        individualDefectCount[index].innerHTML = Object.values(
          liveDataResponse.individualDefectCount
        )[index];
      });

      // defectLog Table row generation
      const defectLogTableBody =
        document.getElementsByClassName('defectLogTableBody')[0];

      Object.values(defectLogTableBody.childNodes).map((childRow) => {
        defectLogTableBody.removeChild(childRow);
      });

      liveDataResponse.employeeDefectResponse.map((singleLog, index) => {
        const activityLogTableRow = document.createElement('tr');
        activityLogTableRow.className =
          'border-b dark:bg-gray-800 dark:border-gray-700';
        defectLogTableBody.appendChild(activityLogTableRow);
        Object.values(liveDataResponse.employeeDefectResponse[index]).map(
          (eachColumnValue, jIndex) => {
            const eachColumnValueCell = document.createElement('td');
            eachColumnValueCell.className =
              'py-4 text-white px-6 font-medium whitespace-nowrap dark:text-white';
            eachColumnValueCell.innerHTML = eachColumnValue;
            activityLogTableRow.appendChild(eachColumnValueCell);
          }
        );
      });
    }
  </script>
</html>
